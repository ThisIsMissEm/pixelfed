on:
  workflow_dispatch:
  push:
    branches:
      - dev
    tags:
      - "*"

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          tools: composer:v2
          extensions: pdo, sqlite, pdo_sqlite

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - run: npm run production

      - name: Create artifact tarball
        # creates a build.tar file excluding CI configuration & development files
        run: |
          tar --exclude=node_modules/* --exclude=.git/* \
          --exclude={.circleci/*,.github/*,.ddev/*} \
          --exclude={.env.docker,.env.testing,.gitattributes} \
          -cvf build.tar .

      - uses: actions/upload-artifact@v3
        with:
          path: release-${{ github.ref_name }}.tar

      - name: Upload Release Tarball
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: release-${{ github.ref_name }}.tar

  release-docker:
    needs: [release]
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        flavor: ["apache", "fpm"]

    steps:
      # We're using the build.tar from the release job, instead of checking out the repository:
      - uses: actions/download-artifact@v3
        with:
          name: release-${{ github.ref_name }}.tar

      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
        if: github.repository == 'pixelfed/pixelfed' && github.event_name != 'pull_request'

      - name: Fetch tags
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: ${{ secrets.DOCKER_HUB_ORGANISATION }}/pixelfed
          flavor: |
            latest=auto
            suffix=-${{ matrix.flavor }}
          tags: |
            type=edge,branch=dev
            type=pep440,pattern={{raw}}
            type=pep440,pattern=v{{major}}.{{minor}}
            type=ref,event=pr

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: contrib/docker/Dockerfile.${{ matrix.flavor }}
          platforms: linux/amd64,linux/arm64
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ github.repository == 'pixelfed/pixelfed' && github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
